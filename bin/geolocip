#!/bin/env/python3

"""
GEOLOCIP: geolocation finder from ip address
desc: 
vers: 0.1
owner: b0un7y - so it is done...
"""

import argparse
import pygeoip
import os
import sys

"""
class - Engine
desc: runs on startup if given ip address and also performs checks and updates.
"""
class Engine():
    def __init__(self, ip):
        self.ip = ip
        self.root = os.path.expanduser("~")
    """
    func - run
    desc: run's database check to print location
    """
    def run(self):
        pass
    """
    func - setup
    desc: checks integrity of database otherwise mkdir and calls update
    """
    def setup(self):
        if self.dep_check():
            if not os.path.isdir(self.root + "/.geolocip"):
                os.system("mkdir " + self.root + "/.geolocip")
        else:
            sys.exit("Install dependencies to run geolocip...")
    """
    func - dep_check
    desc: checks system for wget and gzip
    """
    def dep_check(self):
        wget_g = False
        gzip_g = False
        paths = os.popen("echo $PATH").read().split(":")
        for p in paths:
            if os.path.exists(p + "/wget"):
                wget_g = True
            if os.path.exists(p + "/gzip"):
                gzip_g = True
        if not wget_g:
            print("Dependency not met: wget")
        if not gzip_g:
            print("Dependency not met: gzip")
        if wget_g and gzip_g:
            return 1
        return 0

    """
    func - update
    desc: pulls data from online and unzips
    """
    def update(self):
        print("Updating database...\n\n")
        if os.path.exists(self.root + "/.geolocip/GeoLiteCity.dat"):
            os.system("rm " + self.root + "/.geolocip/GeoLiteCity.dat")
        if os.path.exists(self.root + "/.geolocip/GeoLiteCity.dat.gz"):
            os.system("rm " + self.root + "/.geolocip/GeoLiteCity.dat.gz")
        os.system("wget -P " + self.root + "/.geolocip http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz")
        print("\nExpanding database")
        os.system("gzip -d " + self.root + "/.geolocip/GeoLiteCity.dat.gz")
        print("\nUpdate completed.")

if __name__ == "__main__":
    a = argparse.ArgumentParser()
    a.add_argument("-u", "--update", help="updates the database", action="store_true")
    a.add_argument("-i", "--ip", help="ip address of target")
    args = a.parse_args()
    e = Engine(args.ip)
    e.setup()
    if args.update:
        e.update()
    e.run()
